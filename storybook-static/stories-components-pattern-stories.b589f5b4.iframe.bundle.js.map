{"version":3,"file":"stories-components-pattern-stories.b589f5b4.iframe.bundle.js","mappings":";;;;;;;;;;;;;AAyCA","sources":["webpack://react-hexgrid/./src/stories/components/pattern.stories.tsx"],"sourcesContent":["import { css } from \"@emotion/react\"\nimport { ComponentMeta, ComponentStory } from \"@storybook/react\"\nimport { GridGenerator, Hex, Hexagon, HexGrid, Layout, Pattern } from \"../..\"\nimport { COLORS } from \"../colors\"\n\ntype PathType = typeof Pattern\n\nexport default {\n  title: \"Components/Pattern\",\n  component: Pattern,\n} as ComponentMeta<PathType>\n\nconst hexas = GridGenerator.hexagon(10)\n\nconst Template: ComponentStory<PathType> = (args) => (\n  <HexGrid\n    style={{\n      border: `4px solid ${COLORS.gray[8]}`,\n      background: COLORS.gray[1],\n    }}\n    width=\"100%\"\n    height={800}\n  >\n    <Layout spacing={1.05}>\n      <>\n        {hexas.map((hex, i) => (\n          <Hexagon\n            css={css`\n              fill: #4499a9;\n              fill-opacity: 0.6;\n\n              &:hover {\n                fill: #7be3f6;\n                fill-opacity: 0.9;\n              }\n              polygon {\n                stroke: #7be3f6;\n                stroke-width: 0.2;\n                transition: fill-opacity 0.5s;\n              }\n            `}\n            key={i}\n            q={hex.q}\n            r={hex.r}\n            s={hex.s}\n            fill={hex.r % 2 === 0 ? \"pattern1\" : \"pattern2\"}\n          />\n        ))}\n      </>\n      <Pattern id=\"pattern1\" link=\"https://picsum.photos/200?image=80\" />\n      <Pattern id=\"pattern2\" link=\"https://picsum.photos/200?image=82\" />\n    </Layout>\n  </HexGrid>\n)\nexport const Default = Template.bind({})\n\n// import * as React from \"react\"\n// import { ComponentStory, ComponentMeta } from \"@storybook/react\"\n// import {\n//   HexGrid,\n//   Layout,\n//   Hexagon,\n//   GridGenerator,\n//   Pattern,\n//   Text,\n//   HexUtils,\n// } from \"../..\"\n// import { css, jsx } from \"@emotion/react\"\n\n// export default {\n//   title: \"PatternSwap\",\n//   component: Hexagon,\n// } as ComponentMeta<typeof Hexagon>\n\n// const initialHexagons = GridGenerator.hexagon(2)\n// // Set additional data for hexagons\n// initialHexagons.forEach((hex) => {\n//   hex.pattern = \"pattern1\"\n// })\n"],"names":[],"sourceRoot":""}